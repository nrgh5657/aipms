<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aipms.mapper.ParkingLogMapper">

    <!-- INSERT: 차량 로그 저장 -->
    <insert id="insertLog" parameterType="com.aipms.domain.ParkingLog">
        INSERT INTO parking_log (
            car_number, member_id, entry_time, exit_time, camera_id,
            is_paid, paid_at, payment_method, fee, parking_type
        )
        VALUES (
                   #{carNumber}, #{memberId}, #{entryTime}, #{exitTime}, #{cameraId},
                   #{isPaid}, #{paidAt}, #{paymentMethod}, #{fee}, #{parkingType}
               )
    </insert>
    <!-- SELECT: 차량 로그 + 신청자 이름 포함 -->
    <!-- ResultMap 정의 -->
    <resultMap id="ParkingLogWithMemberMap" type="com.aipms.dto.ParkingLogWithMemberDto">
        <id property="id" column="id" />
        <result property="carNumber" column="car_number" />
        <result property="memberId" column="member_id" />
        <result property="entryTime" column="entry_time" />
        <result property="exitTime" column="exit_time" />
        <result property="cameraId" column="camera_id" />
        <result property="createdAt" column="created_at" />
        <result property="memberName" column="member_name"/> <!-- ✅ 이거 추가 -->

        <!-- 회원 정보 추가 -->
        <result property="subscription" column="subscription" />
    </resultMap>

    <!-- 전체 주차 로그 + 회원 정보 조회 -->
    <select id="selectPagedLogs" resultMap="ParkingLogWithMemberMap">
        SELECT
            pl.*,
            m.subscription,
            m.name AS member_name
        FROM parking_log pl
                 LEFT JOIN member m ON pl.member_id = m.member_id
        ORDER BY pl.entry_time DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAllLogs" resultType="int">
        SELECT COUNT(*) FROM parking_log
    </select>

    <select id="selectById" resultType="com.aipms.domain.ParkingLog">
        SELECT * FROM parking_log WHERE id = #{entryId}
    </select>

    <select id="findLatestUnexitedLog" resultType="com.aipms.domain.ParkingLog" parameterType="string">
        SELECT *
        FROM parking_log
        WHERE car_number = #{carNumber}
          AND exit_time IS NULL
        ORDER BY entry_time DESC
            LIMIT 1
    </select>

    <update id="updatePaymentInfo" parameterType="com.aipms.domain.ParkingLog">
        UPDATE parking_log
        SET
            is_paid = TRUE,
            paid_at = #{paidAt},
            payment_method = #{paymentMethod},
            fee = #{fee},
            exit_time = #{exitTime}
        WHERE id = #{id}
    </update>

    <update id="updatePaymentId">
        UPDATE parking_log
        SET payment_id = #{paymentId}
        WHERE id = #{id}
    </update>

    <update id="updateExitTime" parameterType="com.aipms.domain.ParkingLog">
        UPDATE parking_log
        SET exit_time = #{exitTime}
        WHERE id = #{id}
    </update>

    <select id="findLatestUnpaidByMemberId" parameterType="long" resultType="com.aipms.domain.ParkingLog">
        SELECT *
        FROM parking_log
        WHERE member_id = #{memberId}
          AND exit_time IS NULL
        ORDER BY entry_time DESC
            LIMIT 1
    </select>

    <update id="updatePaymentAndExitInfo">
        UPDATE parking_log
        SET
            payment_id = #{paymentId},
            exit_time = #{exitTime},
            is_paid = #{isPaid},
            paid_at = #{paidAt},
            payment_method = #{paymentMethod},
            fee = #{fee}
        WHERE id = #{entryId}
    </update>

</mapper>
