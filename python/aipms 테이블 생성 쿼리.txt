/* ============================================================
 * 0. 초기화 ­– 있는 경우 깨끗하게 지우고 새로 생성
 * ============================================================ */
DROP DATABASE IF EXISTS aipms;
CREATE DATABASE aipms CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE aipms;

/* ============================================================
 * 1. 테이블 정의
 *   · 부모 → 자식 순서로 생성
 *   · 컬럼명은 카멜케이스 대신 snake_case로 통일
 * ============================================================ */

/*
1-1 회원 테이블
*/
CREATE TABLE member (
    member_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(50),
    phone VARCHAR(20),
    role ENUM('USER', 'ADMIN') DEFAULT 'USER',
    subscription TINYINT DEFAULT 0,
    kakao_id VARCHAR(50),
    login_type ENUM('NORMAL', 'KAKAO') DEFAULT 'NORMAL',
    reg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    car_number VARCHAR(20),
    agree_to_terms TINYINT DEFAULT 0,
    agree_to_privacy TINYINT DEFAULT 0,
    agree_to_marketing TINYINT DEFAULT 0,
    member_code VARCHAR(10) UNIQUE,
    status ENUM('ACTIVE', 'INACTIVE') DEFAULT 'ACTIVE',
    car_model VARCHAR(50)
);


/* 1‑2. 차량 (N:1 member) */
CREATE TABLE car (
    car_id      BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id   BIGINT NOT NULL,
    car_number  VARCHAR(20),
    car_type    VARCHAR(50),
    reg_date    DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_car_member FOREIGN KEY (member_id)
        REFERENCES member(member_id)
);

/* 1‑3. 주차장 */
CREATE TABLE parking (
    parking_id  BIGINT AUTO_INCREMENT PRIMARY KEY,
    name        VARCHAR(100),
    location    VARCHAR(255),
    space_no    VARCHAR(20),
    is_occupied TINYINT DEFAULT 0,
    cctv_url    VARCHAR(255)
);

/* 1‑4. 결제 */
CREATE TABLE payment (
    payment_id      BIGINT AUTO_INCREMENT PRIMARY KEY,
    total_fee       INT,
    paid            TINYINT DEFAULT 0,
    payment_time    DATETIME,
    payment_gateway VARCHAR(50),
    payment_method  VARCHAR(30),
    transaction_id  VARCHAR(100)
);

/* 1‑5. 입출차 로그 (N:1 car, parking, payment) */
CREATE TABLE entry_log (
    entry_id    BIGINT AUTO_INCREMENT PRIMARY KEY,
    car_id      BIGINT NOT NULL,
    parking_id  BIGINT,
    entry_time  DATETIME,
    exit_time   DATETIME,
    status      ENUM('IN','OUT') DEFAULT 'IN',
    ai_detected TINYINT DEFAULT 0,
    payment_id  BIGINT,
    CONSTRAINT fk_entry_car     FOREIGN KEY (car_id)     REFERENCES car(car_id),
    CONSTRAINT fk_entry_parking FOREIGN KEY (parking_id) REFERENCES parking(parking_id),
    CONSTRAINT fk_entry_payment FOREIGN KEY (payment_id) REFERENCES payment(payment_id),
    CONSTRAINT uq_entry_payment UNIQUE (payment_id)      -- 1:1 매핑 보장
);

/* 1‑6. 화재 이벤트 */
CREATE TABLE fire_event_log (
    event_id          BIGINT AUTO_INCREMENT PRIMARY KEY,
    parking_id        BIGINT,
    event_time        DATETIME,
    event_type        ENUM('SMOKE','FLAME','BOTH'),
    image_url         VARCHAR(255),
    is_notified       TINYINT DEFAULT 0,
    notification_time DATETIME,
    notified_phone    VARCHAR(20),
    CONSTRAINT fk_fire_parking FOREIGN KEY (parking_id)
        REFERENCES parking(parking_id)
);

/*
1-7 cctv 상태 정기 로그 테이블
*/
CREATE TABLE cctv_status_log (
    id              BIGINT AUTO_INCREMENT PRIMARY KEY,
    camera_name     VARCHAR(100),       -- 예: '1층 주차장 - 동쪽'
    location        VARCHAR(100),       -- 예: '1층 동쪽 구역'
    status          VARCHAR(20),        -- 'ONLINE', 'OFFLINE', 'CHECKING'
    last_checked_at DATETIME,           -- 점검 시간
    last_connected  DATETIME,           -- 마지막 연결 시간
    record_status   VARCHAR(20),        -- 'RECORDING', 'NOT_RECORDING'
    log_type        VARCHAR(20),        -- 'REGULAR', 'STARTUP', 'SHUTDOWN'
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

/*
1-8 화재발생시 화재 감지 로그 테이블
*/
CREATE TABLE fire_alert_log (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    label VARCHAR(50),                 -- 'fire', 'smoke'
    confidence DOUBLE,                 -- 예: 0.87
    video_url VARCHAR(255),
    image_path VARCHAR(255),
    detected_at DATETIME,             -- 화재 감지된 시간
    location VARCHAR(100),            -- CCTV 위치
    admin_judgment VARCHAR(100),      -- 관리자 판단
    alert_status VARCHAR(50),         -- 예: '전송 완료'
    alert_time DATETIME,              -- 알림 전송 시간
    notes TEXT,                       -- 비고
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


/* 1‑8. 예약 */
CREATE TABLE reservation (
    reservation_id   BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id        BIGINT NOT NULL,
    vehicle_number   VARCHAR(20),
    reservation_start DATETIME NOT NULL,
    reservation_end   DATETIME NOT NULL,
    status           ENUM('WAITING','APPROVED','CANCELLED') DEFAULT 'WAITING',
    CONSTRAINT fk_reserve_member FOREIGN KEY (member_id)
        REFERENCES member(member_id)
);

/* 1‑9. 정기권 */
CREATE TABLE subscription (
    subscription_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id       BIGINT NOT NULL UNIQUE,
    start_date      DATETIME,
    end_date        DATETIME,
    active          BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_sub_member FOREIGN KEY (member_id)
        REFERENCES member(member_id)
);

/* 1‑10. 포인트 & 선불 잔액 */
CREATE TABLE account_info (
    id                      BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id               BIGINT NOT NULL UNIQUE,
    point                   INT DEFAULT 0,
    point_expire_next_month INT DEFAULT 0,
    prepaid_balance         INT DEFAULT 0,
    last_charged_at         DATETIME DEFAULT CURRENT_TIMESTAMP,
    monthly_usage           INT DEFAULT 0,
    compare_last_month      DOUBLE DEFAULT 0,
    created_at              DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at              DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_account_member FOREIGN KEY (member_id)
        REFERENCES member(member_id)
);

/* 1‑11. 멤버십 등급 */
CREATE TABLE membership (
    id                 BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id          BIGINT NOT NULL UNIQUE,
    membership_grade   VARCHAR(50),
    joined_at          DATE,
    total_usage_count  INT,
    total_payment      INT,
    discount_rate      INT,
    benefits           JSON,
    CONSTRAINT fk_membership_member FOREIGN KEY (member_id)
        REFERENCES member(member_id)
);


/*
카카오 토큰 저장 테이블
*/
CREATE TABLE kakao_token (
    token_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    kakao_id VARCHAR(50) NOT NULL UNIQUE,
    access_token TEXT NOT NULL,
    refresh_token TEXT,
    issued_at DATETIME NOT NULL,
    expires_at DATETIME NOT NULL
);

/* ============================================================
 * 2. 샘플 데이터 (INSERT 순서: member → car → …)
 * ============================================================ */

-- 2‑1. 기본 회원 + 포인트 계정
/***암호화 필요하기 때문에 로그인 폼으로 회원가입 필수 
그다음 실제 db에 맞는 member_id 수정 필요 ? 안에 실제 db에 맞는 member_id삽입***/

INSERT INTO account_info (member_id,point,point_expire_next_month,prepaid_balance,monthly_usage,compare_last_month)
VALUES
(?,12000,2000,30000,7000,15.2),
(?,1500,300,10000,5000,-700);

-- 2‑2. 차량
INSERT INTO car (member_id,car_number,car_type)
VALUES
(?,'12가3456','세단'),     -- car_id = 1
(?,'34나5678','SUV'),      -- car_id = 2
(?,'45수7890','EV');       -- car_id = 3

-- 2‑3. 주차 공간 (501~503은 나중 로그용)
INSERT INTO parking (name,location,space_no,is_occupied,cctv_url)
VALUES 
('강남주차장','서울 강남구 테헤란로 123','A-101',0,NULL),         -- parking_id = 1
('서초주차장','서울 서초구 반포대로 55','B-201',0,NULL),           -- parking_id = 2
('송파주차장','서울 송파구 중대로 88','C-05',1,NULL),             -- parking_id = 3
('A구역','B1층','08',0,'http://example.com/cctv1'),                -- 501
('B구역','B2층','12',0,'http://example.com/cctv2'),                -- 502
('C구역','B1층','05',1,'http://example.com/cctv3');                -- 503

-- 2‑4. 결제
INSERT INTO payment (total_fee,paid,payment_time,payment_gateway,payment_method,transaction_id)
VALUES
(9000,1,'2025-07-10 13:00:00','KakaoPay','CARD','TX202507101300'), -- 1
(12000,1,'2025-07-10 15:00:00','KakaoPay','CARD','TX202507101500'),-- 2
(4500,1,'2025-07-12 12:30:00','KakaoPay','CARD','TX202507121230'); -- 3

-- 2‑5. 입출차 로그
INSERT INTO entry_log (car_id,parking_id,entry_time,exit_time,status,payment_id)
VALUES
(1,1,'2025-07-10 10:00:00','2025-07-10 13:00:00','OUT',1),
(1,2,'2025-07-10 11:00:00','2025-07-10 15:00:00','OUT',2),
(1,3,'2025-07-12 09:30:00','2025-07-12 12:15:00','OUT',3),
(3,501,'2025-07-14 14:00:00',NULL,'IN',NULL); -- 진행 중

-- 2‑6. 멤버십
INSERT INTO membership (member_id,membership_grade,joined_at,total_usage_count,total_payment,discount_rate,benefits)
VALUES
(?,'골드 멤버','2024-01-15',156,2450000,5,
 '["월 주차 5% 할인","우선 예약 서비스","전용 고객센터 이용","포인트 적립 2배"]');

/* ============================================================
 * 3. 조회 예시 (필요 시 주석 해제)
 * ============================================================ */
/*
-- 회원별 이용 이력 (member_id = 1)
SELECT el.entry_id, el.entry_time, el.exit_time, p.name AS parking_name, pay.total_fee
FROM entry_log el
JOIN parking p ON el.parking_id = p.parking_id
LEFT JOIN payment pay ON el.payment_id = pay.payment_id
JOIN car c ON el.car_id = c.car_id
WHERE c.member_id = 1
ORDER BY el.entry_time DESC;
*/








